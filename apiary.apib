FORMAT: 1A
HOST: http://4play.apiblueprint.org/

# 4Play

4Play is a web-accessible games database that places special emphasis on a pleasurable design and supports a REST API

# Group Models

## Games [/games]

Model for Games Object

List of Games returns the total list of games in our data model

### List of Games [GET]

+ Response 200 (application/json)

        [
            {
                "Name": "Name",
                "Platform": "PS4",
                "Publisher": "Publisher",
                "Engine": "Engine",
                "Tags": [
                    "one",
                    "two"
                ],
                "Rating": "Rating",
                "ID": "id"
            }
        ]

### Game [/games/{game_id}]

These are the fields that will describe a game:

+ Name
+ Platform
+ Publisher
+ Engine
+ Tags - An array of special fields.
+ Rating - The average rating of the game
+ ID - the id of the game in our database

+ Parameters
    + game_id: 1 (required, number) - The game's id which is unique to each game

### View a Game [GET]

+ Response 201 (application/json)

        {
                "Name": "Name",
                "Platform": "PS4",
                "Publisher": "Publisher",
                "Engine": "Engine",
                "Tags": [
                    "one",
                    "two"
                ],
                "Rating": "Rating",
                "ID": "id"
        }

## Developers [/devs]

List of Games returns the total list of games in our data model

### Developers List [GET]

+ Response 201 (application/json)

        [
            {
                "Name": "Name",
                "Location": "Location",
                "Publisher": "Publisher",
                "Engine": "Engine",
                "Rating": "Rating",
                "Tags": [
                    "one",
                    "two"
                ],
                "ID": "id"
            }
        ]

### Developer [/devs/{dev_id}]

These are the fields that will describe a game:

+ Name
+ Location
+ Publisher
+ Engine
+ Tags - An array of special fields.
+ Rating - The average rating of games by the developer
+ ID - the id of the developer in our database

+ Parameters
    + dev_id: 1 (required, number) - The developer's id which is unique to each developer

### View a Developer [GET]

+ Response 201 (application/json)

        {
                "Name": "Name",
                "Location": "Location",
                "Publisher": "Publisher",
                "Engine": "Engine",
                "Tags": [
                    "one",
                    "two"
                ],
                "Rating": "Rating",
                "ID": "id"
        }
