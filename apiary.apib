FORMAT: 1A
HOST: http://res.4playdb.com/

# 4Play

4Play is a web-accessible games database that places special emphasis on a pleasurable design and supports a REST API

# Group Game

## List [GET /games?{offset}=number&{limit}=number]

Returns a list of games starting at ID = offset and going up to ID = offset + min(25, limit)

+ Parameters
    + offset: 1 (required, number) - Start index
    + limit: 1 (required, number) - Number of games to get (max: 25)

+ Response 201 (application/json)

        [
            {
                "Id": 40080,
                "Name": "Monopoly Millionaire"
            },
            {
                "Id": 5000,
                "Name": "Battlefield 4"
            }
        ]

#### Get [GET /games/{game_id}]

Returns the game specified by ID = game_id

These are the fields that will describe a game:

+ Name: Name of the game
+ Rating: Average rating for this game
+ ReleaseDate: Original release date of the game
+ Franchises: Franchises for the game
+ Genres: Array of Genres
+ Description: Summary of game
+ Deck: Overview of game
+ Videos: Array of related (embeddable) videos URLs
+ Images: Array of related image URLs
+ Developers: Array of companies which developed game
+ Publishers: Array of companies which published game
+ Platforms: Array of platforms game has been released on

+ Parameters
    + offset: 1 (required, game_id) - Game ID
    
+ Response 201 (application/json)

        
            {
                "Id": 40080,
                "Name": "Monopoly Millionaire",
                "Release Date": "Thu Oct 22 2015 14:20:44 GMT-0500 (CDT)",
                "Genres": [ "First-Person Shooter" ],
                "Description": null,
                "Deck": "The next installment of the Mass Effect franchise is in development at BioWare Montreal.",
                "Images": [
                    "http://static.giantbomb.com/uploads/scale_medium/5/57793/2758765-6463613486-joxkD.jpg",
                ],
                "Videos": [
                    "https://www.youtube.com/embed/GsehtC-9yI4",
                    "https://www.youtube.com/embed/FqnKB22pOC0"
                ],
                "Publishers": [
                    {
                        "Id": 40080,
                        "Name": "Riot Games"
                    },
                    {
                        "Id": 5000,
                        "Name": "Codemasters"
                    }
                ],
                "Developers": [
                    {
                        "Id": 40080,
                        "Name": "Electronic Arts"
                    }
                ],
                "Platforms": [
                    {
                        "Id": 40080,
                        "Name": "PC"
                    }
                ]
            }
        

#### Search [GET /games/search?filter[column_operation]={val}]

Output a list of games that meet the search criteria {key} = {val}

Example: GET /games/search?Name=Monopoly+Millionaire 
returns a list of games with name "Monopoly Millionaire"

+ Response 201 (application/json)

        [
            {
                "Id": 40080,
                "Name": "Monopoly Millionaire"
            },
            {
                "Id": 5000,
                "Name": "Codemasters"
            }
        ]

# Group Company

## List [GET /companies?{offset}=number&{limit}=number]

Returns a list of companies starting at ID = offset and going up to ID = offset + min(25, limit)

+ Parameters
    + offset: 1 (required, number) - Start index
    + limit: 1 (required, number) - Number of companies to get (max: 25)

+ Response 201 (application/json)

        [
            {
                "Id": 43534,
                "Name": "Codemasters"
            },
            {
                "Id": 6574,
                "Name": "Electronic Arts"
            }
        ]
        
#### Get [GET /companies/{company_id}]

Returns the company specified by ID = company_id

These are the fields that will describe a company:

+ Name
+ ID
+ FoundedDate
+ LocationAddress
+ LocationCity
+ LocationState
+ LocationCountry
+ Phone
+ Images: Array of images
+ Website: Company website
+ Description: Summary of game
+ DevelopedGames: Array of games developed
+ Concepts: Company values, mission statement
+ PublishedGames: Array of games published
+ Platforms: Array of platforms developed/published on

+ Parameters
    + offset: 1 (required, game_id) - Company ID
    
+ Response 201 (application/json)

        
            {
                "Id": 40080,
                "Name": "Electronic Arts",
                "LocationAddress": "209 Redwood Shores Parkway",
                "LocationCity": "Redwood City",
                "LocationState": "Texas",
                "LocationCountry": "USA",
                "Description": null,
                "Images": [
                    "http://static.giantbomb.com/uploads/scale_medium/5/57793/2758765-6463613486-joxkD.jpg",
                ],
                "PublishedGames": [
                    {
                        "Id": 40080,
                        "Name": "BattleStar Galactica"
                    },
                    {
                        "Id": 5000,
                        "Name": "Crysis 2"
                    }
                ],
                "DevelopedGames": [
                    {
                        "Id": 40080,
                        "Name": "Crysis 3"
                    }
                ],
                "Platforms": [
                    {
                        "Id": 40080,
                        "Name": "PC"
                    }
                ]
            }
        

#### Search [GET /companies/search?filter[column_operation]={val}]

Output a list of companies that meet the search criteria {key} = {val}

Example: GET /companies/search?Name=Riot+Games 
returns a list of companies with name "Riot Games"

+ Response 201 (application/json)

        [
            {
                "Id": 40080,
                "Name": "Riot Games"
            },
            {
                "Id": 5000,
                "Name": "Codemasters"
            }
        ]
        
# Group Platform

## List [GET /platforms?{offset}=number&{limit}=number]

Returns a list of platforms starting at ID = offset and going up to ID = offset + min(25, limit)

+ Parameters
    + offset: 1 (required, number) - Start index
    + limit: 1 (required, number) - Number of platforms to get (max: 25)

+ Response 201 (application/json)

        [
            {
                "Id": 43534,
                "Name": "Playstation 3"
            },
            {
                "Id": 6574,
                "Name": "XBox One"
            }
        ]
        
#### Get [GET /platforms/{platform_id}]

Returns the platform specified by ID = platform_id

These are the fields that will describe a platform:

+ Name
+ ID
+ ReleaseDate
+ Price
+ InstallBase
+ OnlineSupport: Platform provides online support
+ Description=
+ Deck: Short summary
+ Images: Array of images
+ Companies: Array of related companies
+ Games: Array of related games

+ Response 201 (application/json)

+ Parameters
    + offset: 1 (required, platform_id) - Platform ID
    
+ Response 201 (application/json)

{
       "companies":[ {
            "api_detail_url": "http://www.giantbomb.com/api/company/3010-995/",
            "id": 995,
            "name": "Sony Computer Entertainment Incorporated"
        }],
        "deck": "PlayStation 4 is Sony's fourth home video game console, released on November 15, 2013 in North America, and November 29, 2013 in Europe.",
        "id": 146,
        "name": "PlayStation 4",
        "online_support": true,
        "price": "399.00",
        "release_date": "2013-11-15 00:00:00",
        "games": [
            {
                "api_detail_url": "http://www.giantbomb.com/api/game/3030-46631/",
                "id": 46631,
                "name": "Mass Effect: Andromeda"
            }
        ],
        "images": [
            "http://static.giantbomb.com/uploads/scale_medium/5/56742/2495936-9012444134_80ba47fd6e_o.jpg"
        ]
}

#### Search [GET /platforms/search?filter[column_operation]={val}]

Output a list of games that meet the search criteria {key} = {val}

Example: GET /platforms/search?Name=PS4 
returns a list of platforms with name "PS4"

+ Response 201 (application/json)

        [
            {
                "Id": 211,
                "Name": "PS4"
            },
            {
                "Id": 3981,
                "Name": "Xbox"
            }
        ]
